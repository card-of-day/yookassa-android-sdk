/*
 * The MIT License (MIT)
 * Copyright © 2021 NBCO YooMoney LLC
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
 * associated documentation files (the “Software”), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
 * of the Software, and to permit persons to whom the Software is furnished to do so, subject to the
 * following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or substantial
 * portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
 * PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 * OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */

ext {

    File versionNameFile = rootProject.file(".version")
    if (!(versionNameFile.exists() && versionNameFile.text ==~ /\d+.\d+.\d+/)) throw new IllegalStateException(
        "Can't find .version file.\nCreate .version file in root of project " +
            "and write app version in the format major.minor.patch(e.g. 5.8.0).\n"
    )
    versionName = versionNameFile.text

    File versionCodeFile = rootProject.file(".version_code")
    if (versionCodeFile.exists() && versionCodeFile.text ==~ /\d+/) {
        versionCode = Integer.parseInt(versionCodeFile.text)
    } else throw new IllegalStateException(
        "Can't find .version_code file.\nCreate .version_code file in root of project " +
            "and write code version in the format number(e.g. 1).\n"
    )

    versionEnding = {
        currentBranchName = System.getenv('BUILD_BRANCH') ?: ''

        if (currentBranchName != 'master') {
            return '-SNAPSHOT'
        } else {
            return ''
        }
    }
}
